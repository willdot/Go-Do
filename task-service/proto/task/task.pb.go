// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/task/task.proto

package task

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Task struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	UserId               string   `protobuf:"bytes,4,opt,name=userId,proto3" json:"userId,omitempty"`
	CreatedDate          int64    `protobuf:"varint,5,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
	CompletedDate        int64    `protobuf:"varint,6,opt,name=completedDate,proto3" json:"completedDate,omitempty"`
	DailyDo              bool     `protobuf:"varint,7,opt,name=dailyDo,proto3" json:"dailyDo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_152e577c5c92a6d4, []int{0}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Task) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Task) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Task) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Task) GetCreatedDate() int64 {
	if m != nil {
		return m.CreatedDate
	}
	return 0
}

func (m *Task) GetCompletedDate() int64 {
	if m != nil {
		return m.CompletedDate
	}
	return 0
}

func (m *Task) GetDailyDo() bool {
	if m != nil {
		return m.DailyDo
	}
	return false
}

type Response struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Tasks                []*Task  `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Errors               []*Error `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_152e577c5c92a6d4, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *Response) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *Response) GetErrors() []*Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

type Error struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_152e577c5c92a6d4, []int{2}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type CreateTask struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	DailyDo              bool     `protobuf:"varint,3,opt,name=dailyDo,proto3" json:"dailyDo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTask) Reset()         { *m = CreateTask{} }
func (m *CreateTask) String() string { return proto.CompactTextString(m) }
func (*CreateTask) ProtoMessage()    {}
func (*CreateTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_152e577c5c92a6d4, []int{3}
}

func (m *CreateTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTask.Unmarshal(m, b)
}
func (m *CreateTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTask.Marshal(b, m, deterministic)
}
func (m *CreateTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTask.Merge(m, src)
}
func (m *CreateTask) XXX_Size() int {
	return xxx_messageInfo_CreateTask.Size(m)
}
func (m *CreateTask) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTask.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTask proto.InternalMessageInfo

func (m *CreateTask) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateTask) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateTask) GetDailyDo() bool {
	if m != nil {
		return m.DailyDo
	}
	return false
}

type UpdateTask struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTask) Reset()         { *m = UpdateTask{} }
func (m *UpdateTask) String() string { return proto.CompactTextString(m) }
func (*UpdateTask) ProtoMessage()    {}
func (*UpdateTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_152e577c5c92a6d4, []int{4}
}

func (m *UpdateTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTask.Unmarshal(m, b)
}
func (m *UpdateTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTask.Marshal(b, m, deterministic)
}
func (m *UpdateTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTask.Merge(m, src)
}
func (m *UpdateTask) XXX_Size() int {
	return xxx_messageInfo_UpdateTask.Size(m)
}
func (m *UpdateTask) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTask.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTask proto.InternalMessageInfo

func (m *UpdateTask) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *UpdateTask) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateTask) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type DailyDoStatusRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Status               bool     `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DailyDoStatusRequest) Reset()         { *m = DailyDoStatusRequest{} }
func (m *DailyDoStatusRequest) String() string { return proto.CompactTextString(m) }
func (*DailyDoStatusRequest) ProtoMessage()    {}
func (*DailyDoStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_152e577c5c92a6d4, []int{5}
}

func (m *DailyDoStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DailyDoStatusRequest.Unmarshal(m, b)
}
func (m *DailyDoStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DailyDoStatusRequest.Marshal(b, m, deterministic)
}
func (m *DailyDoStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DailyDoStatusRequest.Merge(m, src)
}
func (m *DailyDoStatusRequest) XXX_Size() int {
	return xxx_messageInfo_DailyDoStatusRequest.Size(m)
}
func (m *DailyDoStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DailyDoStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DailyDoStatusRequest proto.InternalMessageInfo

func (m *DailyDoStatusRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *DailyDoStatusRequest) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type CompleteTaskRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Completed            bool     `protobuf:"varint,2,opt,name=completed,proto3" json:"completed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteTaskRequest) Reset()         { *m = CompleteTaskRequest{} }
func (m *CompleteTaskRequest) String() string { return proto.CompactTextString(m) }
func (*CompleteTaskRequest) ProtoMessage()    {}
func (*CompleteTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_152e577c5c92a6d4, []int{6}
}

func (m *CompleteTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteTaskRequest.Unmarshal(m, b)
}
func (m *CompleteTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteTaskRequest.Marshal(b, m, deterministic)
}
func (m *CompleteTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteTaskRequest.Merge(m, src)
}
func (m *CompleteTaskRequest) XXX_Size() int {
	return xxx_messageInfo_CompleteTaskRequest.Size(m)
}
func (m *CompleteTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteTaskRequest proto.InternalMessageInfo

func (m *CompleteTaskRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *CompleteTaskRequest) GetCompleted() bool {
	if m != nil {
		return m.Completed
	}
	return false
}

func init() {
	proto.RegisterType((*Task)(nil), "task.Task")
	proto.RegisterType((*Response)(nil), "task.Response")
	proto.RegisterType((*Error)(nil), "task.Error")
	proto.RegisterType((*CreateTask)(nil), "task.CreateTask")
	proto.RegisterType((*UpdateTask)(nil), "task.UpdateTask")
	proto.RegisterType((*DailyDoStatusRequest)(nil), "task.DailyDoStatusRequest")
	proto.RegisterType((*CompleteTaskRequest)(nil), "task.CompleteTaskRequest")
}

func init() { proto.RegisterFile("proto/task/task.proto", fileDescriptor_152e577c5c92a6d4) }

var fileDescriptor_152e577c5c92a6d4 = []byte{
	// 431 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0xb1, 0x1d, 0xbb, 0xe9, 0x04, 0x2a, 0x34, 0x2d, 0xd1, 0x52, 0x21, 0x64, 0x19, 0x0e,
	0x39, 0xa0, 0x22, 0x95, 0x23, 0xe2, 0xe4, 0x80, 0x54, 0x71, 0xdb, 0xc2, 0x0d, 0x21, 0x19, 0xef,
	0x08, 0xac, 0x86, 0xac, 0xbb, 0xbb, 0x41, 0xe2, 0x0d, 0x79, 0x17, 0x5e, 0x02, 0xed, 0xac, 0xdd,
	0x38, 0x75, 0x00, 0xa9, 0x97, 0x64, 0xe7, 0x9f, 0x7f, 0x67, 0x32, 0xdf, 0x6c, 0xe0, 0x51, 0x6b,
	0xb4, 0xd3, 0x2f, 0x5d, 0x65, 0xaf, 0xf8, 0xe3, 0x8c, 0x63, 0x9c, 0xf8, 0x73, 0xf1, 0x2b, 0x82,
	0xc9, 0x87, 0xca, 0x5e, 0xe1, 0x11, 0xc4, 0x8d, 0x12, 0x51, 0x1e, 0x2d, 0x0e, 0x65, 0xdc, 0x28,
	0x3c, 0x81, 0xd4, 0x35, 0x6e, 0x45, 0x22, 0x66, 0x29, 0x04, 0x98, 0xc3, 0x4c, 0x91, 0xad, 0x4d,
	0xd3, 0xba, 0x46, 0xaf, 0x45, 0xc2, 0xb9, 0xa1, 0x84, 0x73, 0xc8, 0x36, 0x96, 0xcc, 0x85, 0x12,
	0x13, 0x4e, 0x76, 0x91, 0xbf, 0x59, 0x1b, 0xaa, 0x1c, 0xa9, 0x65, 0xe5, 0x48, 0xa4, 0x79, 0xb4,
	0x48, 0xe4, 0x50, 0xc2, 0xe7, 0xf0, 0xa0, 0xd6, 0xdf, 0xdb, 0x15, 0xf5, 0x9e, 0x8c, 0x3d, 0xbb,
	0x22, 0x0a, 0x38, 0x50, 0x55, 0xb3, 0xfa, 0xb9, 0xd4, 0xe2, 0x20, 0x8f, 0x16, 0x53, 0xd9, 0x87,
	0xc5, 0x35, 0x4c, 0x25, 0xd9, 0x56, 0xaf, 0x2d, 0xe1, 0x53, 0xe0, 0xf1, 0x78, 0x9e, 0xd9, 0x39,
	0x9c, 0xf1, 0xdc, 0x7e, 0x4e, 0xc9, 0x3a, 0xe6, 0x90, 0xfa, 0x6f, 0x2b, 0xe2, 0x3c, 0xb9, 0x65,
	0x08, 0x09, 0x7c, 0x06, 0x19, 0x19, 0xa3, 0x8d, 0x15, 0x09, 0x5b, 0x66, 0xc1, 0xf2, 0xd6, 0x6b,
	0xb2, 0x4b, 0x15, 0x6f, 0x20, 0x65, 0x01, 0x11, 0x26, 0xb5, 0x56, 0xc4, 0xfd, 0x52, 0xc9, 0xe7,
	0xdb, 0xac, 0xe2, 0x11, 0xab, 0xe2, 0x33, 0x40, 0xc9, 0x00, 0x78, 0x03, 0x37, 0xc4, 0xa3, 0x7f,
	0x10, 0x1f, 0x57, 0x19, 0x12, 0x49, 0x76, 0x89, 0x7c, 0x02, 0xf8, 0xd8, 0xaa, 0xbe, 0xfe, 0x1c,
	0x32, 0x3f, 0xc2, 0x45, 0xbf, 0xe5, 0x2e, 0xba, 0xeb, 0xa6, 0x8b, 0x77, 0x70, 0xb2, 0x0c, 0x8d,
	0x2e, 0x5d, 0xe5, 0x36, 0x56, 0xd2, 0xf5, 0x86, 0xac, 0xfb, 0x6b, 0x9f, 0x39, 0x64, 0x96, 0x8d,
	0xdc, 0x68, 0x2a, 0xbb, 0xa8, 0x78, 0x0f, 0xc7, 0x65, 0xb7, 0x62, 0x5e, 0xc0, 0x7f, 0xca, 0x3c,
	0x81, 0xc3, 0x9b, 0x17, 0xd1, 0x55, 0xda, 0x0a, 0xe7, 0xbf, 0x23, 0x98, 0xf9, 0x2a, 0x97, 0x64,
	0x7e, 0x34, 0x35, 0xe1, 0x0b, 0xc8, 0x02, 0x62, 0x7c, 0x18, 0x16, 0xb8, 0x05, 0x7e, 0x7a, 0x14,
	0x94, 0xfe, 0xd1, 0x14, 0xf7, 0xbc, 0x3b, 0x00, 0xeb, 0xdd, 0x5b, 0x7c, 0x7b, 0xdc, 0x25, 0x1c,
	0x97, 0xdf, 0xaa, 0xf5, 0x57, 0xda, 0xc1, 0x80, 0xa7, 0xc1, 0xb8, 0x8f, 0xcd, 0x9e, 0x22, 0xaf,
	0xe1, 0xfe, 0x70, 0x7a, 0x7c, 0xdc, 0xfd, 0xcc, 0x31, 0x91, 0xf1, 0xe5, 0x2f, 0x19, 0xff, 0x95,
	0x5f, 0xfd, 0x09, 0x00, 0x00, 0xff, 0xff, 0xec, 0xcc, 0x7a, 0x3c, 0xe3, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for TaskService service

type TaskServiceClient interface {
	Create(ctx context.Context, in *CreateTask, opts ...client.CallOption) (*Response, error)
	Update(ctx context.Context, in *UpdateTask, opts ...client.CallOption) (*Response, error)
	ChangeDailyDoStatus(ctx context.Context, in *DailyDoStatusRequest, opts ...client.CallOption) (*Response, error)
	CompleteTask(ctx context.Context, in *CompleteTaskRequest, opts ...client.CallOption) (*Response, error)
}

type taskServiceClient struct {
	c           client.Client
	serviceName string
}

func NewTaskServiceClient(serviceName string, c client.Client) TaskServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "task"
	}
	return &taskServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *taskServiceClient) Create(ctx context.Context, in *CreateTask, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "TaskService.Create", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) Update(ctx context.Context, in *UpdateTask, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "TaskService.Update", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) ChangeDailyDoStatus(ctx context.Context, in *DailyDoStatusRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "TaskService.ChangeDailyDoStatus", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) CompleteTask(ctx context.Context, in *CompleteTaskRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "TaskService.CompleteTask", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TaskService service

type TaskServiceHandler interface {
	Create(context.Context, *CreateTask, *Response) error
	Update(context.Context, *UpdateTask, *Response) error
	ChangeDailyDoStatus(context.Context, *DailyDoStatusRequest, *Response) error
	CompleteTask(context.Context, *CompleteTaskRequest, *Response) error
}

func RegisterTaskServiceHandler(s server.Server, hdlr TaskServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&TaskService{hdlr}, opts...))
}

type TaskService struct {
	TaskServiceHandler
}

func (h *TaskService) Create(ctx context.Context, in *CreateTask, out *Response) error {
	return h.TaskServiceHandler.Create(ctx, in, out)
}

func (h *TaskService) Update(ctx context.Context, in *UpdateTask, out *Response) error {
	return h.TaskServiceHandler.Update(ctx, in, out)
}

func (h *TaskService) ChangeDailyDoStatus(ctx context.Context, in *DailyDoStatusRequest, out *Response) error {
	return h.TaskServiceHandler.ChangeDailyDoStatus(ctx, in, out)
}

func (h *TaskService) CompleteTask(ctx context.Context, in *CompleteTaskRequest, out *Response) error {
	return h.TaskServiceHandler.CompleteTask(ctx, in, out)
}
